
######## memory #########

#  IL_ROW   or   IL_PLN
IL_PLN

######### Kernel #########

#FLAG_KER_ACC


########## Input #########

# NORM_CPU NORM_GPU
NORM_CPU

# FFT_CPU  FFT_GPU
FFT_CPU


######## Convolve ########

# MUL_00  MUL_10  MUL_21  MUL_22  MUL_23  MUL_30 MUL_AA
FLAG_MUL_AA

# Other Convolve options
# FLAG_TEX_MUL

#MUL_SLICES	1			# Last Edited by run time script

#MUL_CHUNK	6			# Last Edited by run time script

######### FFT ############

# FLAG_CUFFT_CB_IN 	# In my testing this is very slow, like 7 times slower (FFT only)!
FLAG_CUFFT_CB_OUT       	# Last Edited by run time script

# FLAG_NO_CB


######## Return ##########

# FLAG_RET_ARR  FLAG_RET_PLN
FLAG_RET_ARR


######## Search ##########

# If peforming a in-mem GPU search store powers in half presision (allowes doing twice as large in-meme searches)
# FLAG_HALF or FLAG_SINGLE
FLAG_HALF


#FLAG_SAS_TEX
#FLAG_TEX_INTERP
# SIG_GPU or SIG_CPU (default)


#  SS_CPU  SS_00  SS_10  SS_20   SS_30  SS_INMEM  SS_AA
SS_INMEM

#FLAG_RAND_1


SS_SLICES	1

SS_CHUNK	4

###### Candidates ########

# FLAG_RETURN_ALL or FLAG_RETURN_FINAL

#FLAG_STORE_ALL
#FLAG_STORE_EXP

# CU_CAND_ARR   CU_CAND_LST   CU_CAND_QUAD
#CAND_QUAD


###### Optimisation ########

optpln01 40
optpln02 30
optpln03 10
optpln04 10
optpln05 0
optpln06 0

#optSz01 10
#optSz02 10
#optSz04 10
#optSz08 10
#optSz16 10


###### Other ########

#FLAG_RAND_1
#FLAG_RAND_2
#FLAG_RAND_3
#FLAG_RAND_4

#globalInt01	4			# Last Edited by run time script

#PLT_OPT
#UNOPT

